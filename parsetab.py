
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASIGNACION BREAK CASE CATCH CLONE COMENTARIO COMILLA_DOBLE CONST CONTINUE CORCHETE_DER CORCHETE_IZQ DECREMENTO DEFAULT DIFERENT DIFERENTE DIVISION DO DOS_PUNTOS ECHO ELSE ELSEIF EMPTY ENDDECLARE ENDFOR ENDFOREACH ENDIF ENDSWITCH ENDWHILE EXIT FINAL FOR FOREACH FUSION_NULL GLOBAL GOTO IDENTICO IF IGUAL INCREMENTO LLAVE_DER LLAVE_IZQ MAYOR_IGUAL_QUE MAYOR_QUE MENOR_IGUAL_QUE MENOR_QUE MULTIPLICACION NAVE_ESPACIAL NEW NOMBRE NOT NO_IDENTICO NUMERO OP_AND OP_OR OR PARENTESIS_DER PARENTESIS_IZQ PRINT PUNTO PUNTO_COMA RESTA RETURN SUMA SWITCH TRY WHILE XORassign : NOMBRE ASIGNACION exprexpr : expr SUMA term\n            | expr RESTA term\n            | term term : term MULTIPLICACION factor\n            | term DIVISION factor\n            | factor  factor : NUMERO '
    
_lr_action_items = {'DIVISION':([4,5,7,12,13,14,15,],[-7,-8,10,10,10,-6,-5,]),'ASIGNACION':([2,],[3,]),'MULTIPLICACION':([4,5,7,12,13,14,15,],[-7,-8,11,11,11,-6,-5,]),'NOMBRE':([0,],[2,]),'NUMERO':([3,8,9,10,11,],[5,5,5,5,5,]),'RESTA':([4,5,6,7,12,13,14,15,],[-7,-8,8,-4,-3,-2,-6,-5,]),'$end':([1,4,5,6,7,12,13,14,15,],[0,-7,-8,-1,-4,-3,-2,-6,-5,]),'SUMA':([4,5,6,7,12,13,14,15,],[-7,-8,9,-4,-3,-2,-6,-5,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'factor':([3,8,9,10,11,],[4,4,4,14,15,]),'assign':([0,],[1,]),'expr':([3,],[6,]),'term':([3,8,9,],[7,12,13,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> assign","S'",1,None,None,None),
  ('assign -> NOMBRE ASIGNACION expr','assign',3,'p_assign','php_parser.py',7),
  ('expr -> expr SUMA term','expr',3,'p_expr','php_parser.py',10),
  ('expr -> expr RESTA term','expr',3,'p_expr','php_parser.py',11),
  ('expr -> term','expr',1,'p_expr','php_parser.py',12),
  ('term -> term MULTIPLICACION factor','term',3,'p_term','php_parser.py',15),
  ('term -> term DIVISION factor','term',3,'p_term','php_parser.py',16),
  ('term -> factor','term',1,'p_term','php_parser.py',17),
  ('factor -> NUMERO','factor',1,'p_factor','php_parser.py',20),
]
